[{"E:\\SAC\\cc-dashboard\\src\\index.js":"1","E:\\SAC\\cc-dashboard\\src\\reportWebVitals.js":"2","E:\\SAC\\cc-dashboard\\src\\App.js":"3","E:\\SAC\\cc-dashboard\\src\\components\\LoginScreen\\LoginScreen.js":"4","E:\\SAC\\cc-dashboard\\src\\components\\Dashboard\\Dashboard.js":"5","E:\\SAC\\cc-dashboard\\src\\components\\Dashboard\\Category-Card\\CategoryCard.js":"6","E:\\SAC\\cc-dashboard\\src\\components\\Dashboard\\Category-Card\\AdminCard.js":"7","E:\\SAC\\cc-dashboard\\src\\components\\Dashboard\\Category-Card\\Flights\\FlightList.js":"8","E:\\SAC\\cc-dashboard\\src\\components\\Dashboard\\Category-Card\\AdminModal.js":"9","E:\\SAC\\cc-dashboard\\src\\components\\Dashboard\\Category-Card\\Airmen\\Airmen.js":"10","E:\\SAC\\cc-dashboard\\src\\components\\Dashboard\\Category-Card\\CardModal.js":"11"},{"size":565,"mtime":1608744153412,"results":"12","hashOfConfig":"13"},{"size":375,"mtime":1608744153412,"results":"14","hashOfConfig":"13"},{"size":2241,"mtime":1608745430055,"results":"15","hashOfConfig":"13"},{"size":247,"mtime":1608744153400,"results":"16","hashOfConfig":"13"},{"size":2263,"mtime":1608744153398,"results":"17","hashOfConfig":"13"},{"size":559,"mtime":1608745406966,"results":"18","hashOfConfig":"13"},{"size":1207,"mtime":1608744153394,"results":"19","hashOfConfig":"13"},{"size":827,"mtime":1608745447260,"results":"20","hashOfConfig":"13"},{"size":6612,"mtime":1608746176926,"results":"21","hashOfConfig":"13"},{"size":1317,"mtime":1608744153395,"results":"22","hashOfConfig":"13"},{"size":3469,"mtime":1608745393728,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1dlwr7y",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\SAC\\cc-dashboard\\src\\index.js",[],["48","49"],"E:\\SAC\\cc-dashboard\\src\\reportWebVitals.js",[],"E:\\SAC\\cc-dashboard\\src\\App.js",[],"E:\\SAC\\cc-dashboard\\src\\components\\LoginScreen\\LoginScreen.js",[],"E:\\SAC\\cc-dashboard\\src\\components\\Dashboard\\Dashboard.js",[],"E:\\SAC\\cc-dashboard\\src\\components\\Dashboard\\Category-Card\\CategoryCard.js",[],"E:\\SAC\\cc-dashboard\\src\\components\\Dashboard\\Category-Card\\AdminCard.js",[],"E:\\SAC\\cc-dashboard\\src\\components\\Dashboard\\Category-Card\\Flights\\FlightList.js",[],"E:\\SAC\\cc-dashboard\\src\\components\\Dashboard\\Category-Card\\AdminModal.js",["50"],"import React, { useState } from \"react\";\r\nimport { Modal, Button, Form } from \"react-bootstrap\";\r\n\r\nconst AdminModal = (props) => {\r\n  const [airmanId, setAirmanId] = useState(\"\");\r\n  const [flightId, setFlightId] = useState(\"\");\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [pt, setPT] = useState(\"Current\");\r\n  const [evaluation, setEval] = useState(\"Current\");\r\n  const [adls, setADLS] = useState(\"Current\");\r\n  const [medical, setMedical] = useState(\"Current\");\r\n\r\n  const createUrl = () => {\r\n    const key = props.optionname.toLowerCase();\r\n    console.log(key);\r\n    if (props.optionname === \"Add\") {\r\n      return `https://us-central1-cc-dashboard-afb15.cloudfunctions.net/${key}Airman/${flightId}/`;\r\n    } else {\r\n      return `https://us-central1-cc-dashboard-afb15.cloudfunctions.net/${key}Airman/${flightId}/${airmanId}`;\r\n    }\r\n  };\r\n\r\n  const getMethod = () => {\r\n    switch (props.optionname) {\r\n      case \"Add\": return \"POST\";\r\n      case \"Remove\": return \"DELETE\";\r\n      case \"Update\": return \"PUT\";\r\n\r\n      default: return \"bad-option\";\r\n    }\r\n  };\r\n\r\n  const getBody = () => {\r\n    return props.optionname !== \"Remove\"\r\n      ? {\r\n        method: getMethod(),\r\n        mode: \"cors\",\r\n        accept: \"*/*\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          firstName: firstName,\r\n          lastName: lastName,\r\n          adls: adls.toLocaleLowerCase(),\r\n          pt: pt.toLocaleLowerCase(),\r\n          medical: medical.toLocaleLowerCase(),\r\n          evaluation: evaluation.toLocaleLowerCase(),\r\n        }),\r\n      }\r\n      : {\r\n        method: getMethod(),\r\n        mode: \"cors\",\r\n        accept: \"*/*\",\r\n      };\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"displayed-card\">\r\n          <h1>{props.optionname}</h1>\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form\r\n          onSubmit={async (e) => {\r\n            e.preventDefault();\r\n            const response = await fetch(createUrl(), getBody());\r\n            const data = await response.json();\r\n            window.location.reload();\r\n          }}\r\n        >\r\n          <Form.Group size=\"lg\" controlId=\"text-inputs\">\r\n            {props.optionname !== \"Add\" && <Form.Label>Airman ID</Form.Label>}\r\n            {props.optionname !== \"Add\" && (\r\n              <Form.Control\r\n                autoFocus\r\n                type=\"text\"\r\n                value={airmanId}\r\n                onChange={(event) => setAirmanId(event.target.value)}\r\n              />\r\n            )}\r\n            {props.optionname !== \"Remove\" && (\r\n              <Form.Label>First Name</Form.Label>\r\n            )}\r\n            {props.optionname !== \"Remove\" && (\r\n              <Form.Control\r\n                autoFocus\r\n                type=\"text\"\r\n                value={firstName}\r\n                onChange={(event) => setFirstName(event.target.value)}\r\n              />\r\n            )}\r\n            {props.optionname !== \"Remove\" && (\r\n              <Form.Label>Last Name</Form.Label>\r\n            )}\r\n            {props.optionname !== \"Remove\" && (\r\n              <Form.Control\r\n                autoFocus\r\n                type=\"text\"\r\n                value={lastName}\r\n                onChange={(event) => setLastName(event.target.value)}\r\n              />\r\n            )}\r\n            {props.optionname !== \"Remove\" && <Form.Label>Flight</Form.Label>}\r\n            {props.optionname !== \"Remove\" && (\r\n              <Form.Control\r\n                autoFocus\r\n                type=\"text\"\r\n                value={flightId}\r\n                onChange={(event) => setFlightId(event.target.value)}\r\n              />\r\n            )}\r\n          </Form.Group>\r\n          <Form.Group>\r\n            {props.optionname !== \"Remove\" && (\r\n              <Form.Label htmlFor=\"pt-select\">PT</Form.Label>\r\n            )}\r\n            {props.optionname !== \"Remove\" && (\r\n              <select\r\n                className=\"form-control\"\r\n                id=\"pt-select\"\r\n                value={pt}\r\n                onChange={(e) => setPT(e.target.value)}\r\n              >\r\n                <option value=\"current\">Current</option>\r\n                <option value=\"not current\">Not Current</option>\r\n                <option value=\"overdue\">Overdue</option>\r\n              </select>\r\n            )}\r\n            {props.optionname !== \"Remove\" && (\r\n              <Form.Label htmlFor=\"eval-select\">Evaluation</Form.Label>\r\n            )}\r\n            {props.optionname !== \"Remove\" && (\r\n              <select\r\n                className=\"form-control\"\r\n                id=\"eval-select\"\r\n                value={evaluation}\r\n                onChange={(e) => setEval(e.target.value)}\r\n              >\r\n                <option value=\"current\">Current</option>\r\n                <option value=\"not current\">Not Current</option>\r\n                <option value=\"overdue\">Overdue</option>\r\n              </select>\r\n            )}\r\n            {props.optionname !== \"Remove\" && (\r\n              <Form.Label htmlFor=\"adls-select\">ADLS</Form.Label>\r\n            )}\r\n            {props.optionname !== \"Remove\" && (\r\n              <select\r\n                className=\"form-control\"\r\n                id=\"adls-select\"\r\n                value={adls}\r\n                onChange={(e) => setADLS(e.target.value)}\r\n              >\r\n                <option value=\"current\">Current</option>\r\n                <option value=\"not current\">Not Current</option>\r\n                <option value=\"overdue\">Overdue</option>\r\n              </select>\r\n            )}\r\n            {props.optionname !== \"Remove\" && (\r\n              <Form.Label htmlFor=\"med-select\">Medical</Form.Label>\r\n            )}\r\n            {props.optionname !== \"Remove\" && (\r\n              <select\r\n                className=\"form-control\"\r\n                id=\"med-select\"\r\n                value={medical}\r\n                onChange={(e) => setMedical(e.target.value)}\r\n              >\r\n                <option value=\"current\">Current</option>\r\n                <option value=\"not current\">Not Current</option>\r\n                <option value=\"overdue\">Overdue</option>\r\n              </select>\r\n            )}\r\n          </Form.Group>\r\n          <Button block size=\"lg\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AdminModal;\r\n","E:\\SAC\\cc-dashboard\\src\\components\\Dashboard\\Category-Card\\Airmen\\Airmen.js",[],"E:\\SAC\\cc-dashboard\\src\\components\\Dashboard\\Category-Card\\CardModal.js",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":76,"column":19,"nodeType":"57","messageId":"58","endLine":76,"endColumn":23},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]